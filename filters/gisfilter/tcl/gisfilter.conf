#
# $Id$
#

### set gisfilter(localconfdirs)  $common(localconfdirs);
### set gisfilter(datadir) [file join $common(datadir) "gis"];
#
# wct rc file directories
#
### set gisfilter(wct_rcdirs) $gisfilter(localconfdirs);
### set gisfilter(wct_rcsubdir) [file join "gis" "wct"];

# sat configuration
### set gisfilter(sat_enable) 1;
### set gisfilter(sat_regex)  {^tig(e|w|p|q)0(1|4|5)};
### set gisfilter(sat_datext)       ".gini";
### set gisfilter(sat_latest_enable)        1; # make link to latest
### set gisfilter(sat_latestname)   "latest";
### set gisfilter(sat_fnamefmt)  {$rc(wmoid)_$rc(ymd_hm)}; # without extension
### set gisfilter(sat_dirfmt)    {[string range $rc(wmoid) 0 2]/$rc(wmoid)};
#
### set gisfilter(sat_outputfile_fmt) [list tif netcdf]; 
### set gisfilter(sat_outputfile_fxt,tif) ".tif";
### set gisfilter(sat_outputfile_fxt,netcdf) ".nc";
#
### set gisfilter(sat_wctrcfilelist) [list "wct_sat_conus.xml"];
### set gisfilter(sat_wctrcfile_regex,wct_sat_conus.xml) {^tig(e|w)};


# rad configuration
### set gisfilter(rad_enable) 0;
### set gisfilter(rad_regex)  {.*};
### set gisfilter(rad_datext)       ".nids";
### set gisfilter(rad_latest_enable)        1; # make link to latest
### set gisfilter(rad_latestname)   "latest";
### set rstfilter(rad_namefmt)      {$rc(awips)_$rc(ymd_hm)};
### set rstfilter(rad_dirfmt)       {$rc(awips2)/$rc(awips1)}; # without ext
#
### set gisfilter(rad_outputfile_fmt) [list tif netcdf]; 
### set gisfilter(rad_outputfile_fxt,tif) ".tif";
### set gisfilter(rad_outputfile_fxt,netcdf) ".nc";

#
# Read the local overrides
#
set _confname "gisfilter.conf";

if {[info exists source_gisfilter_conf_defined]} {
    return;
}
set source_gisfilter_conf_defined 1;

foreach _d $common(localconfdirs) {
    set _localconfname ${_d}/${_confname}
    if {[file exists ${_localconfname}] == 1} {
        source ${_localconfname};
    }
}
unset _d;
unset _confname;
unset _localconfname;
