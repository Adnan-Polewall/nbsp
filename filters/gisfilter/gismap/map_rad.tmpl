#
# $Id$
#
# When this file is sourced (by nbspgismap1), the following parameters
# will have been set:
#
# map(awips1)	= e.g., n0r
# map(geodata)
# map(mapfonts)
# map(inputfile,<i>)
# map(extent)
# map(size)
#
# These (extent and size) defaults can (should) be overriden via
# the -D switch to nbspgismap1. In practice, they are set in the
# "bundle configuration file".
#
set _map(extent) {-104 25 -90 36};
set _map(size) {800 600};
#
foreach _k [list extent size] {
    if {[info exists map($_k)] == 0} {
        set map($_k) $_map($_k);
    }
}

set header {
MAP
	#
	# Allow the possibility that the extent parameters are
	# specified as "a b c d" or "a,b,c,d", and similarly with the size.
	#
	EXTENT [string map [list "," " "] $map(extent)]
	UNITS  DD
	SIZE [string map [list "," " "] $map(size)]
	FONTSET "$map(mapfonts)/fonts.list"
}

#
# The "nexrad" layer; one for each site.
#
set nexrad {
LAYER
  NAME $name
  DATA $datafile
  TYPE RASTER
  STATUS ON
  TRANSPARENCY 100
  CLASSITEM "\[pixel\]"
    CLASS
        EXPRESSION (\[pixel\] >= 0 AND \[pixel\] < 5)
        STYLE
            COLOR $color_0_5
        END
    END
    CLASS
        EXPRESSION (\[pixel\] >= 5 AND \[pixel\] < 10)
        STYLE
            COLOR $color_5_10
        END
    END
    CLASS
        EXPRESSION (\[pixel\] >= 10 AND \[pixel\] < 15)
        STYLE
            COLOR $color_10_15
        END
    END
    CLASS
        EXPRESSION (\[pixel\] >= 15 AND \[pixel\] < 20)
        STYLE
            COLOR $color_15_20
        END
    END
    CLASS
        EXPRESSION (\[pixel\] >= 20 AND \[pixel\] < 25)
        STYLE
            COLOR $color_20_25
        END
    END
    CLASS
        EXPRESSION (\[pixel\] >= 25 AND \[pixel\] < 30)
        STYLE
            COLOR $color_25_30
        END
    END
    CLASS
        EXPRESSION (\[pixel\] >= 30 AND \[pixel\] < 35)
        STYLE
            COLOR $color_30_35
        END
    END
    CLASS
        EXPRESSION (\[pixel\] >= 35 AND \[pixel\] < 40)
        STYLE
            COLOR $color_35_40
        END
    END
    CLASS
        EXPRESSION (\[pixel\] >= 40 AND \[pixel\] < 45)
        STYLE
            COLOR $color_40_45
        END
    END
    CLASS
        EXPRESSION (\[pixel\] >= 45 AND \[pixel\] < 50)
        STYLE
            COLOR $color_45_50
        END
    END
    CLASS
        EXPRESSION (\[pixel\] >= 50 AND \[pixel\] < 55)
        STYLE
            COLOR $color_50_55
        END
    END
    CLASS
        EXPRESSION (\[pixel\] >= 55 AND \[pixel\] < 60)
        STYLE
            COLOR $color_55_60
        END
    END
    CLASS
        EXPRESSION (\[pixel\] >= 60 AND \[pixel\] < 65)
        STYLE
            COLOR $color_60_65
        END
    END
    CLASS
        EXPRESSION (\[pixel\] >= 65 AND \[pixel\] < 70)
        STYLE
            COLOR $color_65_70
        END
    END
    CLASS
        EXPRESSION (\[pixel\] >= 70 AND \[pixel\] < 75)
        STYLE
            COLOR $color_70_75
        END
    END
    CLASS
        EXPRESSION (\[pixel\] >= 75 AND \[pixel\] < 80)
        STYLE
            COLOR $color_75_80
        END
    END
END
}

set counties {
LAYER
    NAME "counties"
    TYPE POLYGON
    STATUS ON
    DATA "$map(geodata)/c_15jl09/c_15jl09.shp"
    TRANSPARENCY 100
    LABELITEM "countyname"
    CLASS
       NAME "counties"
       STYLE
         OUTLINECOLOR 90 90 90
       END
      LABEL
        COLOR 132 31 31
        SHADOWCOLOR 218 218 218
        SHADOWSIZE 2 2
        TYPE TRUETYPE
        FONT arial-bold
        SIZE 6
        ANTIALIAS TRUE
        POSITION CL
        PARTIALS FALSE
        MINDISTANCE 300
        BUFFER 4
      END # end of label 
    END

END
}

# init
package require nbsp::gis;

# Load the color definitions - the default is that they are in the file
# gis-color-def in the same directory as this template.
#
::nbsp::gis::init [file join [file dirname [info script]] "gis-colors.def"];

# Set the color table for this template
set color_table [::nbsp::gis::radcolor $map(awips1)];

#
# Set the color_start_end variables that are used in the template.
#
foreach p $color_table {
    foreach {i1 i2 c} $p {
        eval set color_${i1}_${i2} {$c};
    }
}

#
# Build the main script
#
set MAP [subst $header];
set i 1;
foreach k [array names map "inputfile,*"] {
    set name "nexrad-$i";
    set datafile $map($k);
    append MAP "\n" [subst $nexrad];
    incr i;
}
append MAP "\n" [subst $counties];
append MAP "\n" "END";

set map(scriptstr) $MAP;

#
# Test
#
# set map(tmpl) "map_rad.tmpl";
# set map(awips1) "n0r";
# set map(geodata) "/usr/local/share/geodata";
# set map(inputfile,1) "/var/noaaport/data/gis/1.tif";
# set map(inputfile,2) "/var/noaaport/data/gis/2.tif";
#
# Use the defaults for these two:
#
# map(extent)
# map(size)
#
# source "map_rad.tmpl";
# puts $map(scriptstr);
