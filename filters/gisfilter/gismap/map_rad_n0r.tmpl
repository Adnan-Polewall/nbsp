#
# $Id$
#

#
# These (extent and size) defaults can (should) be overriden via
# the -D switch to nbspgismap1. In practice, they are set in the
# "bundle configuration file".
#
set _map(extent) {-104 25 -90 36};
set _map(size) {800 600};
#
foreach _k [list extent size] {
    if {[info exists map($_k)] == 0} {
        set map($_k) $_map($_k);
    }
}

#
# Color definitions - these should be in some common file somewhere
# and sourced by the main script before sourcing this one.
#
set background {255 255 255};
set white {255 255 255};
set darkviolet {148 0 211};
set magenta {255 0 255};
set brown {165 42 42};
set firebrick {178 34 34};
set red {255 0 0};
set orange {255 165 0};
set gold {255 215 0};
set yellow {255 255 0};
set green {0 255 0};
set limegreen {50 205 50};
set lawngreen {124 252 0};
set blue {0 0 255};
set deepskyblue {0 191 255};
set aqua {0 255 255};

#
# These should be set according to some standard; e.g,
#
#   osf_ref16.tbl
#   nids_ref16.tbl 
#
# and should also be in some file that is separate from the template. For
# other types (s,v,...) only the corresponding xxx_color_table file
# needs to be sourced. 
#
set n0r_color_table [list];
lappend n0r_color_table [list 0 5 $background];
lappend n0r_color_table [list 5 10 $aqua];
lappend n0r_color_table [list 10 15 $deepskyblue];
lappend n0r_color_table [list 15 20 $blue];
lappend n0r_color_table [list 20 25 $lawngreen];
lappend n0r_color_table [list 25 30 $limegreen];
lappend n0r_color_table [list 30 35 $green];
lappend n0r_color_table [list 35 40 $yellow];
lappend n0r_color_table [list 40 45 $gold];
lappend n0r_color_table [list 45 50 $orange];
lappend n0r_color_table [list 50 55 $red];
lappend n0r_color_table [list 55 60 $firebrick];
lappend n0r_color_table [list 60 65 $brown];
lappend n0r_color_table [list 65 70 $magenta];
lappend n0r_color_table [list 70 75 $darkviolet];
lappend n0r_color_table [list 75 80 $white];

#
# Using the values above, the color_start_end variables that
# are used in the template will be set.
#
set color_table $n0r_color_table;

set header {
MAP
	#
	# Allow the possibility that the extent parameters are
	# specified as "a b c d" or "a;b;c;d", and similarly with the size.
	#
	EXTENT [string map [list ";" " "] $map(extent)]
	UNITS  DD
	SIZE [string map [list ";" " "] $map(size)]
}

#
# The "nexrad" layer; one for each site.
#
set nexrad {
LAYER
  NAME $name
  DATA $datafile
  TYPE RASTER
  STATUS ON
  TRANSPARENCY 100
  CLASSITEM "\[pixel\]"
    CLASS
        EXPRESSION (\[pixel\] >= 0 AND \[pixel\] < 5)
        STYLE
            COLOR $color_0_5
        END
    END
    CLASS
        EXPRESSION (\[pixel\] >= 5 AND \[pixel\] < 10)
        STYLE
            COLOR $color_5_10
        END
    END
    CLASS
        EXPRESSION (\[pixel\] >= 10 AND \[pixel\] < 15)
        STYLE
            COLOR $color_10_15
        END
    END
    CLASS
        EXPRESSION (\[pixel\] >= 15 AND \[pixel\] < 20)
        STYLE
            COLOR $color_15_20
        END
    END
    CLASS
        EXPRESSION (\[pixel\] >= 20 AND \[pixel\] < 25)
        STYLE
            COLOR $color_20_25
        END
    END
    CLASS
        EXPRESSION (\[pixel\] >= 25 AND \[pixel\] < 30)
        STYLE
            COLOR $color_25_30
        END
    END
    CLASS
        EXPRESSION (\[pixel\] >= 30 AND \[pixel\] < 35)
        STYLE
            COLOR $color_30_35
        END
    END
    CLASS
        EXPRESSION (\[pixel\] >= 35 AND \[pixel\] < 40)
        STYLE
            COLOR $color_35_40
        END
    END
    CLASS
        EXPRESSION (\[pixel\] >= 40 AND \[pixel\] < 45)
        STYLE
            COLOR $color_40_45
        END
    END
    CLASS
        EXPRESSION (\[pixel\] >= 45 AND \[pixel\] < 50)
        STYLE
            COLOR $color_45_50
        END
    END
    CLASS
        EXPRESSION (\[pixel\] >= 50 AND \[pixel\] < 55)
        STYLE
            COLOR $color_50_55
        END
    END
    CLASS
        EXPRESSION (\[pixel\] >= 55 AND \[pixel\] < 60)
        STYLE
            COLOR $color_55_60
        END
    END
    CLASS
        EXPRESSION (\[pixel\] >= 60 AND \[pixel\] < 65)
        STYLE
            COLOR $color_60_65
        END
    END
    CLASS
        EXPRESSION (\[pixel\] >= 65 AND \[pixel\] < 70)
        STYLE
            COLOR $color_65_70
        END
    END
    CLASS
        EXPRESSION (\[pixel\] >= 70 AND \[pixel\] < 75)
        STYLE
            COLOR $color_70_75
        END
    END
    CLASS
        EXPRESSION (\[pixel\] >= 75 AND \[pixel\] < 80)
        STYLE
            COLOR $color_75_80
        END
    END
END
}

set counties {
LAYER
    NAME "counties"
    TYPE POLYGON
    STATUS ON
    DATA "$map(geodata)/c_15jl09/c_15jl09.shp"
    TRANSPARENCY 100
    CLASS
       NAME "counties"
       STYLE
         SYMBOL 0
         SIZE 3
         OUTLINECOLOR 90 90 90
       END
    END
END
}

#
# Set the color_start_end variables that are used in the template.
#
foreach p $color_table {
    foreach {i1 i2 c} $p {
        eval set color_${i1}_${i2} {$c};
    }
}

#
# Build the main script
#
set MAP [subst $header];
set i 1;
foreach k [array names map "inputfile,*"] {
    set name "nexrad-$i";
    set datafile $map($k);
    append MAP "\n" [subst $nexrad];
    incr i;
}
append MAP "\n" [subst $counties];
append MAP "\n" "END";

set map(scriptstr) $MAP;

#
# Test
#
# set map(inputfile,1) "1.tif";
# set map(inputfile,2) "2.tif";
# set map(geodata) "/usr/local/share/geodata";
#
# source map_rad_n0r.tmpl;
# puts $map(scriptstr);
#
